import java.util.*;

import javax.print.attribute.ResolutionSyntax;

public class SimulatedAnnealing {
	private CandidateSolution cs;
	PopUpWindow p = new PopUpWindow();
	public SimulatedAnnealing(PreferenceTable p) {
		cs = new CandidateSolution(p);
	}

	public CandidateSolution saSolution(){
		int newEnergy;
		int currentEnergy = cs.getEnergy();
		int a = 0;
		int count = 0;
		for(double temp = 10; temp >=0; temp -= 0.00009){
			int j = 1000000;
			if(a % j == 0){
				a = a/100000;
				a = a*count;
				p.popUp(a);
				count++;
			}
			a++;
			Random RND = new Random();
			int num = RND.nextInt(cs.getAllCandiates().size());

			CandidateAssignment c = cs.getAllCandiates().get(num);
			c.randomiseAssignment();
			cs.getAllCandiates().setElementAt(c, num);
			newEnergy = cs.getEnergy();
			
			double changeInEnergy = currentEnergy - newEnergy;

			if(newEnergy >= currentEnergy && !(boltzmann(temp, changeInEnergy))){
				c.undoChange();
			}

			else{
				currentEnergy = newEnergy;
			}
		}
		return cs;
	}
	
	private boolean boltzmann(double temp, double change){
		Random r = new Random();
		double randNum = r.nextDouble();
		
		double boltzmann = (Math.exp((change/temp)));
		
		if(boltzmann > randNum){
			return true;
		}
		else{
			return false;
		}
	}
	

}
