import java.util.*;

import javax.print.attribute.ResolutionSyntax;

public class SimulatedAnnealing {
	private CandidateSolution CS;
//	PopUpWindow popup = new PopUpWindow();
	public SimulatedAnnealing(PreferenceTable p) {
		CS = new CandidateSolution(p);
	}

	public CandidateSolution saSolution(){
		int newEnergy;
		int currentEnergy = CS.getEnergy();
//		int a = 0;
//		int count = 0;
		for(double temp = 1050; temp >=0; temp -= 0.0001){
//			int j = 1000000;
//			if(a % j == 0){
//				a = a/100000;
//				a = a*count;
//				popup.popUp(a);
//				count++;
//			}
//			a++;
			Random RND = new Random();
			int num = RND.nextInt(CS.getAllCandiates().size());

			CandidateAssignment C = CS.getAllCandiates().get(num);
			C.randomiseAssignment();
			CS.getAllCandiates().setElementAt(C, num);
			newEnergy = CS.getEnergy();
			
			double changeInEnergy = currentEnergy - newEnergy;

			if(newEnergy >= currentEnergy && !(boltzmann(temp, changeInEnergy))){
				C.undoChange();
				//CS.getAllCandiates().setElementAt(C, num);
			}

			else{
				currentEnergy = newEnergy;
			}
		}
		System.out.println("Energy: " + CS.getEnergy());
		return CS;
	}
	
	private boolean boltzmann(double temp, double change){
		Random RND = new Random();
		double randNum = RND.nextDouble();
		
		double boltzmann = (Math.exp((change/temp)));
		
		if(boltzmann > randNum){
			return true;
		}
		else{
			return false;
		}
	}
	

}
