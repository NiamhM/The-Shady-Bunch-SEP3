import java.util.*;

public class StudentEntry {
	private String studentName;
	private boolean hasPreassignedProject;
	private int numberOfStatedPreferences;
	private Vector<String> orderedPreferences = new Vector<String>();
	Vector<Vector<String>> PT =  PreferenceTable.getPrefTable();
	private Random RND = new Random();
	
	public StudentEntry(String sName){
		studentName = sName;
		for(Vector<String> row: PT){
			if(row.firstElement() == studentName){
				for(int i=0; i <row.size()-2; i++){ // - 2 to stop falling off the edge of the vector
					if(!(orderedPreferences.contains(row.elementAt(i+2)))){ //ensuring that we don't add duplicate projects
						orderedPreferences.add(row.elementAt(i+2).intern()); //i+2 to ignore the student number and preassigned project 
					}
				}
				if(row.elementAt(1).equalsIgnoreCase("Yes")){
					if((orderedPreferences.size() > 1)){
						String assignedProject = orderedPreferences.firstElement();
						orderedPreferences.clear();
						orderedPreferences.add(assignedProject);
					}
						hasPreassignedProject = true;
				}
				else{
					hasPreassignedProject = false;
				}
			}	
		}
		numberOfStatedPreferences = orderedPreferences.size();
	}
	
	public String getStudentName(){
		return studentName;
	}
	
	public Vector<String> getOrderedPreference(){
		return orderedPreferences;
	}
	
	public boolean preassignedProject(String pname){ //only has one preference and records it 
		if(hasPreassignedProject && (orderedPreferences.size() == 1) && (orderedPreferences.firstElement().equalsIgnoreCase(pname))){
			return hasPreassignedProject;
		}
		else return false;
	}
	
	public boolean hasPreassignedProject(){
		return hasPreassignedProject;	
	}
	
	public int getNumberOfStatedPreferences(){
		return numberOfStatedPreferences; 
	}
	
	public void addPoject(String pName){
		for(int i= 0; i< orderedPreferences.size(); i++){
			String project = orderedPreferences.elementAt(i);
			if((!project.equalsIgnoreCase(pName)) && (orderedPreferences.size() < 10) ){ // wont add project if already in list or already has 10 projects
				orderedPreferences.add(pName.intern());
				break;
			}
		}
	}
	
	public String getRandomPreference(){
		int num = RND.nextInt(orderedPreferences.size()); //get random number between 0 and number of projects
		String randomPreference = orderedPreferences.get(num);
		return randomPreference;
	}
	
	public boolean hasPreference(String pref){
		if(orderedPreferences.contains(pref)){
			return true;
		}
		else{
			return false;
		}
	}
	
	public int getRanking(String Project){
		int rank =0;
		if(orderedPreferences.contains(Project)){
			rank = orderedPreferences.indexOf(Project);
		}else{
			rank = -1;
		}
		return rank;
	}
	
}
